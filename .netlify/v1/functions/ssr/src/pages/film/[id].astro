---
import Layout from "../../layouts/Layout.astro";
import { FilmById } from "../../../backend/backend.mjs";
import { ActeurReaById } from "../../../backend/backend.mjs";
const { id } = Astro.params;
const prop = await FilmById(id);
if(!prop){
    return Astro.redirect('/film');
}

let invites = [];
const inviteIds = Array.isArray(prop.invite) ? prop.invite : 
                 (prop.invite ? [prop.invite] : []);

const invitePromises = inviteIds.map(inviteId => ActeurReaById(inviteId));
const inviteData = await Promise.all(invitePromises);

invites = inviteData.filter(invite => invite);

function formatDateHeure(dateString) {
  const date = new Date(dateString);
  
  date.setHours(date.getHours() - 2);
  
  const jourDate = date.toLocaleDateString('fr-FR', { 
    weekday: 'long', 
    day: 'numeric', 
    month: 'long' 
  });
  
  const heure = date.toLocaleTimeString('fr-FR', { 
    hour: '2-digit', 
    minute: '2-digit' 
  });
  
  return `${jourDate} - ${heure}`;
}
---

<Layout titre={prop.titre_film}>
    <h1 class="flex justify-center font-aclonica text-purple text-3xl mt-30">{prop.titre_film}</h1>
    <div class="mb-20 w-5/6 mx-auto">
        <div class="mt-10 flex flex-col items-center gap-4 lg:flex-row">
            <img class="mr-6 rounded-2xl w-1/2 lg:w-2/5" src={prop.imageUrl} alt={`Image de ${prop.titre_film}`} />
            <div class="mt-10 flex flex-col items-center gap-10 lg:items-start">
            {
                prop.bandeannonce && (
                  <div class="mt-6 p-4 rounded-lg">
                    <iframe
                      class="mt-4 rounded-lg shadow-md w-full h-64 lg:h-50"
                      src={prop.bandeannonce.replace("watch?v=", "embed/")}
                      frameborder="0"
                      allow="autoplay; encrypted-media"
                      allowfullscreen
                    ></iframe>
                  </div>
                )
              }
                <div class="w-9/10 items-center flex flex-col lg:items-start">
                    <p class="text-2xs font-comfortaa text-brown">Synopsis : </p>
                    <p class="text-xl font-comfortaa text-brown">{prop.synopsis}</p>
                </div>
                <div class="text-center flex flex-col lg:items-start">
                    <p class="text-2xs font-comfortaa text-brown">De :</p>
                    <p class="text-xl font-comfortaa text-brown">{prop.realisateur}</p>
                </div>
                <div class="text-center flex flex-col lg:items-start">
                    <p class="text-2xs font-comfortaa text-brown">Durée :</p>
                    <p class="text-xl font-comfortaa text-brown">{prop.duree} minutes</p>
                </div>
                <div class="text-center flex flex-col lg:items-start">
                    <p class="text-2xs font-comfortaa text-brown">Date de projection : </p>
                    <p class="text-xl font-comfortaa text-brown">{formatDateHeure(prop.date_projection)}</p>
                </div>
                <div class="text-center flex flex-col lg:items-start">
                    <p class="text-2xs font-comfortaa text-brown">Invité{invites.length > 1 ? 's' : ''} : </p>
                    <div>
                        {invites.length > 0 ? (
                            invites.map((invite, index) => (
                                <>
                                    <a href={`/invite/${invite.id}`} class="text-xl font-comfortaa text-pink lg:hover:text-pink-500">
                                        {invite.prenom} {invite.nom}
                                    </a>
                                    {index < invites.length - 1 && <span class="text-brown">, </span>}
                                </>
                            ))
                        ) : (
                            <p class="text-xl font-comfortaa text-brown">Aucun invité</p>
                        )}
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>